package com.example.user.newapp;

/**
 * Created by Seyfullah Semen on 25-7-2017.
 */

public class EncodedBase {
 public static final String mraidFile = "";

}
